name: Build and publish npm package

on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  generate-npm-package:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Login docker github
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          echo $GH_TOKEN | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate NuGet package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.ref_name }}" == "master" ]]; then 
            PACKAGE_VER=${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}
          else
            PACKAGE_VER=0.1.${{ github.run_number }}-${{ github.run_attempt }}-test
          fi
          
          sudo apt-get update
          sudo apt-get install jq -y

          docker run --rm ${{ steps.meta.outputs.tags }} python ./generate_openapi.py > openapi.json
          
          npx @openapitools/openapi-generator-cli generate -i "openapi.json" \
            -g csharp --additional-properties=packageName=noadudai.schedule_generator_client \
            --additional-properties=packageVersion=${PACKAGE_VER} \
            --additional-properties=useSingleRequestParameter=true \
            --additional-properties=targetFramework=net8.0 -o ./api

          cd api/src/noadudai.schedule_generator_client
          
          dotnet pack -p:RepositoryUrl=https://github.com/noadudai/EmployeeShiftsSchedule
          
          dotnet nuget add source "https://nuget.pkg.github.com/noadudai/index.json" --name github --username noadudai --password secrets.GITHUB_TOKEN
          
          if [[ "${{ github.ref_name }}" == "master" ]]; then
            dotnet nuget push "bin/Release/noadudai.schedule_generator_client.${PACKAGE_VER}.nupkg" \
              --api-key ${{ secrets.GITHUB_TOKEN }} \
              --source "https://nuget.pkg.github.com/noadudai/index.json"
          else
            dotnet nuget push "bin/Release/noadudai.schedule_generator_client.${PACKAGE_VER}.nupkg" \
              --api-key ${{ secrets.GITHUB_TOKEN }} \
              --source "https://nuget.pkg.github.com/noadudai/index.json"
          fi

